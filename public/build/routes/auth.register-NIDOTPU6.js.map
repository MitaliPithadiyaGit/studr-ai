{
  "version": 3,
  "sources": ["../../../app/routes/auth.register.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\auth.register.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\auth.register.tsx\");\n  import.meta.hot.lastModified = \"1733294237688.0447\";\n}\n// REMIX HMR END\n\nimport * as React from \"react\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useNavigation } from \"@remix-run/react\";\nimport { createServerClient } from \"@supabase/auth-helpers-remix\";\nimport { Button } from \"~/components/ui/button\";\nimport { Input } from \"~/components/ui/input\";\nimport { Label } from \"~/components/ui/label\";\nexport const loader = async ({\n  request\n}) => {\n  const response = new Response();\n  const supabase = createServerClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {\n    request,\n    response\n  });\n  const {\n    data: {\n      session\n    }\n  } = await supabase.auth.getSession();\n  if (session) {\n    return redirect(\"/\");\n  }\n  return json(null, {\n    headers: response.headers\n  });\n};\nexport const action = async ({\n  request\n}) => {\n  const response = new Response();\n  const supabase = createServerClient(process.env.NEXT_PUBLIC_SUPABASE_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY, {\n    request,\n    response\n  });\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const name = formData.get(\"name\");\n  const provider = formData.get(\"provider\");\n  if (provider === \"google\") {\n    const {\n      data,\n      error\n    } = await supabase.auth.signInWithOAuth({\n      provider: \"google\",\n      options: {\n        redirectTo: `${new URL(request.url).origin}/auth/callback`\n      }\n    });\n    if (error) {\n      return json({\n        error: error.message\n      }, {\n        status: 400\n      });\n    }\n    return redirect(data.url, {\n      headers: response.headers\n    });\n  }\n  const {\n    error: signUpError,\n    data: signUpData\n  } = await supabase.auth.signUp({\n    email,\n    password\n  });\n  if (signUpError) {\n    return json({\n      error: signUpError.message\n    }, {\n      status: 400\n    });\n  }\n\n  // Create user profile\n  const {\n    error: profileError\n  } = await supabase.from(\"users\").insert([{\n    id: signUpData.user?.id,\n    email,\n    name,\n    subscription_tier: \"free\",\n    token_usage: 0\n  }]);\n  if (profileError) {\n    return json({\n      error: profileError.message\n    }, {\n      status: 400\n    });\n  }\n  return redirect(\"/\", {\n    headers: response.headers\n  });\n};\nexport default function RegisterPage() {\n  _s();\n  const actionData = useActionData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  return <div className=\"flex flex-col justify-center min-h-screen bg-muted/40\">\r\n      <div className=\"mx-auto w-full max-w-[350px] space-y-6\">\r\n        <div className=\"flex flex-col space-y-2 text-center\">\r\n          <h1 className=\"text-2xl font-semibold tracking-tight\">\r\n            Create an account\r\n          </h1>\r\n          <p className=\"text-sm text-muted-foreground\">\r\n            Enter your information to get started\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"grid gap-6\">\r\n          <Form method=\"post\">\r\n            <input type=\"hidden\" name=\"provider\" value=\"google\" />\r\n            <Button type=\"submit\" variant=\"outline\" className=\"w-full bg-background\" disabled={isSubmitting}>\r\n              <svg className=\"w-4 h-4 mr-2\" viewBox=\"0 0 24 24\">\r\n                <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" fill=\"#4285F4\" />\r\n                <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" fill=\"#34A853\" />\r\n                <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" fill=\"#FBBC05\" />\r\n                <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" fill=\"#EA4335\" />\r\n              </svg>\r\n              Continue with Google\r\n            </Button>\r\n          </Form>\r\n\r\n          <div className=\"relative\">\r\n            <div className=\"absolute inset-0 flex items-center\">\r\n              <span className=\"w-full border-t\" />\r\n            </div>\r\n            <div className=\"relative flex justify-center text-xs uppercase\">\r\n              <span className=\"px-2 bg-background text-muted-foreground\">\r\n                Or continue with\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          <Form method=\"post\" className=\"grid gap-4\">\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"name\">Name</Label>\r\n              <Input id=\"name\" name=\"name\" type=\"text\" autoComplete=\"name\" required />\r\n            </div>\r\n\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"email\">Email</Label>\r\n              <Input id=\"email\" name=\"email\" type=\"email\" autoCapitalize=\"none\" autoComplete=\"email\" autoCorrect=\"off\" required />\r\n            </div>\r\n\r\n            <div className=\"grid gap-2\">\r\n              <Label htmlFor=\"password\">Password</Label>\r\n              <Input id=\"password\" name=\"password\" type=\"password\" autoComplete=\"new-password\" required />\r\n            </div>\r\n\r\n            {actionData?.error && <div className=\"text-sm text-red-500\">{actionData.error}</div>}\r\n\r\n            <Button className=\"w-full\" disabled={isSubmitting}>\r\n              {isSubmitting ? \"Creating account...\" : \"Create account\"}\r\n            </Button>\r\n          </Form>\r\n        </div>\r\n\r\n        <div className=\"text-sm text-center\">\r\n          Already have an account?{\" \"}\r\n          <Link to=\"/auth/login\" className=\"font-medium text-primary hover:underline\">\r\n            Sign in\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_s(RegisterPage, \"e3rMULficn7ldQYYArv00m53mwQ=\", false, function () {\n  return [useActionData, useNavigation];\n});\n_c = RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAA+B;AAE/B,gCAAmC;AAsGzB;AA7HV,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAgC;AAChC,cAAY,IAAI,eAAe;AACjC;AAoGe,SAAR,eAAgC;AACrC,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,aAAa,cAAc;AACjC,QAAM,eAAe,WAAW,UAAU;AAC1C,SAAO,mDAAC,SAAI,WAAU,yDAClB,6DAAC,SAAI,WAAU,0CACb;AAAA,uDAAC,SAAI,WAAU,uCACb;AAAA,yDAAC,QAAG,WAAU,yCAAwC,iCAAtD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,mDAAC,OAAE,WAAU,iCAAgC,qDAA7C;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IAEA,mDAAC,SAAI,WAAU,cACb;AAAA,yDAAC,QAAK,QAAO,QACX;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,YAAW,OAAM,YAA3C;AAAA;AAAA;AAAA;AAAA,eAAoD;AAAA,QACpD,mDAAC,UAAO,MAAK,UAAS,SAAQ,WAAU,WAAU,wBAAuB,UAAU,cACjF;AAAA,6DAAC,SAAI,WAAU,gBAAe,SAAQ,aACpC;AAAA,+DAAC,UAAK,GAAE,2HAA0H,MAAK,aAAvI;AAAA;AAAA;AAAA;AAAA,mBAAiJ;AAAA,YACjJ,mDAAC,UAAK,GAAE,yIAAwI,MAAK,aAArJ;AAAA;AAAA;AAAA;AAAA,mBAA+J;AAAA,YAC/J,mDAAC,UAAK,GAAE,iIAAgI,MAAK,aAA7I;AAAA;AAAA;AAAA;AAAA,mBAAuJ;AAAA,YACvJ,mDAAC,UAAK,GAAE,uIAAsI,MAAK,aAAnJ;AAAA;AAAA;AAAA;AAAA,mBAA6J;AAAA,eAJ/J;AAAA;AAAA;AAAA;AAAA,iBAKA;AAAA,UAAM;AAAA,aANR;AAAA;AAAA;AAAA;AAAA,eAQA;AAAA,WAVF;AAAA;AAAA;AAAA;AAAA,aAWA;AAAA,MAEA,mDAAC,SAAI,WAAU,YACb;AAAA,2DAAC,SAAI,WAAU,sCACb,6DAAC,UAAK,WAAU,qBAAhB;AAAA;AAAA;AAAA;AAAA,eAAkC,KADpC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,SAAI,WAAU,kDACb,6DAAC,UAAK,WAAU,4CAA2C,gCAA3D;AAAA;AAAA;AAAA;AAAA,eAEA,KAHF;AAAA;AAAA;AAAA;AAAA,eAIA;AAAA,WARF;AAAA;AAAA;AAAA;AAAA,aASA;AAAA,MAEA,mDAAC,QAAK,QAAO,QAAO,WAAU,cAC5B;AAAA,2DAAC,SAAI,WAAU,cACb;AAAA,6DAAC,SAAM,SAAQ,QAAO,oBAAtB;AAAA;AAAA;AAAA;AAAA,iBAA0B;AAAA,UAC1B,mDAAC,SAAM,IAAG,QAAO,MAAK,QAAO,MAAK,QAAO,cAAa,QAAO,UAAQ,QAArE;AAAA;AAAA;AAAA;AAAA,iBAAsE;AAAA,aAFxE;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEA,mDAAC,SAAI,WAAU,cACb;AAAA,6DAAC,SAAM,SAAQ,SAAQ,qBAAvB;AAAA;AAAA;AAAA;AAAA,iBAA4B;AAAA,UAC5B,mDAAC,SAAM,IAAG,SAAQ,MAAK,SAAQ,MAAK,SAAQ,gBAAe,QAAO,cAAa,SAAQ,aAAY,OAAM,UAAQ,QAAjH;AAAA;AAAA;AAAA;AAAA,iBAAkH;AAAA,aAFpH;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEA,mDAAC,SAAI,WAAU,cACb;AAAA,6DAAC,SAAM,SAAQ,YAAW,wBAA1B;AAAA;AAAA;AAAA;AAAA,iBAAkC;AAAA,UAClC,mDAAC,SAAM,IAAG,YAAW,MAAK,YAAW,MAAK,YAAW,cAAa,gBAAe,UAAQ,QAAzF;AAAA;AAAA;AAAA;AAAA,iBAA0F;AAAA,aAF5F;AAAA;AAAA;AAAA;AAAA,eAGA;AAAA,QAEC,YAAY,SAAS,mDAAC,SAAI,WAAU,wBAAwB,qBAAW,SAAlD;AAAA;AAAA;AAAA;AAAA,eAAwD;AAAA,QAE9E,mDAAC,UAAO,WAAU,UAAS,UAAU,cAClC,yBAAe,wBAAwB,oBAD1C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WApBF;AAAA;AAAA;AAAA;AAAA,aAqBA;AAAA,SA9CF;AAAA;AAAA;AAAA;AAAA,WA+CA;AAAA,IAEA,mDAAC,SAAI,WAAU,uBAAsB;AAAA;AAAA,MACV;AAAA,MACzB,mDAAC,QAAK,IAAG,eAAc,WAAU,4CAA2C,uBAA5E;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAJF;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,OAhEF;AAAA;AAAA;AAAA;AAAA,SAiEA,KAlEG;AAAA;AAAA;AAAA;AAAA,SAmEL;AACJ;AACA,GAAG,cAAc,gCAAgC,OAAO,WAAY;AAClE,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
