{
  "version": 3,
  "sources": ["../../../app/routes/pages.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\pages.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\pages.$id.tsx\");\n  import.meta.hot.lastModified = \"1733136384547.9314\";\n}\n// REMIX HMR END\n\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { requireAuth } from \"~/lib/auth.server\";\nimport { Editor } from \"~/components/editor\";\nimport { Layout } from \"~/components/layout\";\nimport { usePageTitle } from \"~/hooks/use-page-title\";\nimport { usePageEmoji } from \"~/hooks/use-page-emoji\";\nexport const loader = async ({\n  request,\n  params\n}) => {\n  const {\n    supabase,\n    response\n  } = await requireAuth(request);\n  const {\n    id\n  } = params;\n\n  // Get document\n  const {\n    data: document\n  } = await supabase.from(\"documents\").select(\"*\").eq(\"id\", id).single();\n  if (!document) {\n    throw new Response(\"Not Found\", {\n      status: 404\n    });\n  }\n  return json({\n    document\n  }, {\n    headers: response.headers\n  });\n};\nexport default function DocumentPage() {\n  _s();\n  const {\n    document\n  } = useLoaderData();\n  const {\n    title,\n    setTitle\n  } = usePageTitle(document.id);\n  const {\n    emoji,\n    setEmoji\n  } = usePageEmoji(document.id);\n  return <Layout title={title || document.title} emoji={emoji || document.emoji} onTitleChange={setTitle} onEmojiChange={setEmoji}>\r\n      <Editor title={title || document.title} onTitleChange={setTitle} />\r\n    </Layout>;\n}\n_s(DocumentPage, \"nMwLavrTyKiEzmrsGB+bsAxSEPs=\", false, function () {\n  return [useLoaderData, usePageTitle, usePageEmoji];\n});\n_c = DocumentPage;\nvar _c;\n$RefreshReg$(_c, \"DocumentPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAqB;AAErB,kBAA4B;AA8CtB;AApEN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AAqCe,SAAR,eAAgC;AACrC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,aAAa,SAAS,EAAE;AAC5B,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,aAAa,SAAS,EAAE;AAC5B,SAAO,mDAAC,UAAO,OAAO,SAAS,SAAS,OAAO,OAAO,SAAS,SAAS,OAAO,eAAe,UAAU,eAAe,UACnH,6DAAC,UAAO,OAAO,SAAS,SAAS,OAAO,eAAe,YAAvD;AAAA;AAAA;AAAA;AAAA,SAAiE,KAD9D;AAAA;AAAA;AAAA;AAAA,SAEL;AACJ;AACA,GAAG,cAAc,gCAAgC,OAAO,WAAY;AAClE,SAAO,CAAC,eAAe,cAAc,YAAY;AACnD,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,cAAc;AAE/B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
